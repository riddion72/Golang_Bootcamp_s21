/*
 * Candy Server
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * API version: 1.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package main

import (
	"crypto/tls"
	"crypto/x509"
	"log"
	"net/http"
	"os"
	"os/exec"
	"time"

	// WARNING!
	// Change this to a fully-qualified import path
	// once you place this file into your project.
	// For example,
	//
	//    sw "github.com/myname/myrepo/go"
	//
	sw "candy-server/candyAPI"
)

func err_code(err error) {
	if err != nil {
		log.Fatal(err)
	}
}

func getServer() *http.Server {
	router := sw.NewRouter()
	cp := x509.NewCertPool()

	data, err := os.ReadFile("../cert/minica.pem")
	err_code(err)

	cp.AppendCertsFromPEM(data)

	c, err := tls.LoadX509KeyPair("../cert/localhost/cert.pem", "../cert/localhost/key.pem")
	err_code(err)

	tls := &tls.Config{
		Certificates: []tls.Certificate{c},
		ClientCAs:    cp,
		ClientAuth:   tls.RequireAndVerifyClientCert,
	}

	server := &http.Server{
		Handler:      router,
		Addr:         "localhost:3333",
		TLSConfig:    tls,
		WriteTimeout: 15 * time.Second,
		ReadTimeout:  15 * time.Second,
	}
	return server
}

func main() {
	cmd := exec.Command("gcc", "../cow/cowSay.c", "-o", "CowSay")
	err_code(cmd.Run())

	server := getServer()
	log.Println("server start work")

	err_code(server.ListenAndServeTLS("", "")) //("../cert/minica.pem", "../cert/minica-key.pem")
}
